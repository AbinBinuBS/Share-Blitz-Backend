"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const authController_1 = __importDefault(require("../../../adapters/controllers/user/authController"));
const userRepository_1 = __importDefault(require("../../database/repositories/user/userRepository"));
const userUseCase_1 = __importDefault(require("../../../application/useCase/user/userUseCase"));
const jwtToken_1 = __importDefault(require("../../utils/helpers/jwtToken"));
const hashPassword_1 = __importDefault(require("../../utils/helpers/hashPassword"));
const authMiddleware_1 = __importDefault(require("../../middleware/authMiddleware"));
const verificationRepository_1 = __importDefault(require("../../database/repositories/user/verificationRepository"));
const TokenGeneration_1 = require("../../../domain/services/TokenGeneration");
const userRepo = new userRepository_1.default();
const verificationRepo = new verificationRepository_1.default();
const jwt = new jwtToken_1.default;
const hashedPassword = new hashPassword_1.default();
const userCase = new userUseCase_1.default(userRepo, verificationRepo, jwt, hashedPassword);
const controller = new authController_1.default(userCase);
const router = express_1.default.Router();
// router.post('/createUser', (req, res) => {controller.createUser(req, res) });
router.post('/createUser', (req, res) => { controller.sendOtp(req, res); });
router.post('/verifyOtp', (req, res) => { controller.verifyOtp(req, res); });
router.post('/login', (req, res, next) => { controller.login(req, res); });
router.post('/refreshAccessToken', (req, res, next) => { (0, TokenGeneration_1.refreshAccessTokens)(req, res, next); });
router.post('/gsignup', (req, res) => { controller.Gsignup(req, res); });
router.post('/glogin', (req, res) => { controller.Glogin(req, res); });
router.get('/getUser', (req, res) => { controller.getUser(req, res); });
router.post('/resendOtp', (req, res) => { controller.resendOtp(req, res); });
router.get('/forgetPassword/sendOtp', (req, res) => { controller.sendForgetPasswordOtp(req, res); });
router.post('/forgetPassword/verifyOtp', (req, res) => { controller.verifyForgetPasswordOtp(req, res); });
router.patch('/forgetPassword/changePassword', (req, res, next) => { controller.verifyForgetPassword(req, res, next); });
router.patch('/editProfile', authMiddleware_1.default, (req, res) => { controller.editProfile(req, res); });
exports.default = router;
